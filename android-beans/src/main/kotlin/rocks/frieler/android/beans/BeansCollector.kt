package rocks.frieler.android.beans

/**
 * Interface for classes that allow to define beans.
 *
 *
 * These beans are simple Java objects, that get defined together with a name and can be looked up either by their name
 * or type later to inject them as dependencies (DI), e.g. through a [BeansProvider].
 *
 * @author Christopher Frieler
 */
interface BeansCollector {
	/**
	 * Defines the given bean.
	 *
	 *
	 * A unique name for the bean will be generated by the implementation.
	 *
	 * @param bean the bean to define
	 */
	fun defineBean(bean: Any)

	/**
	 * Defines the given bean with the specified name.
	 *
	 * @param name the name for the bean
	 * @param bean the bean to define
	 */
	fun defineBean(name: String, bean: Any)

	/**
	 * Registers the given [BeanPostProcessor].
	 *
	 *
	 * The [BeanPostProcessor] will get all beans already defined to post-process immediately and
	 * all beans defined subsequently.
	 *
	 * @param beanPostProcessor the new [BeanPostProcessor]
	 */
	fun registerBeanPostProcessor(beanPostProcessor: BeanPostProcessor)
}
